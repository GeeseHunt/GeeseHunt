{"version":3,"sources":["/Users/chrisxu/Documents/repos/geesehunt/src/components/Link/Link.js","/Users/chrisxu/Documents/repos/geesehunt/src/components/AppLayout/styles/AppLayoutStyles.js","/Users/chrisxu/Documents/repos/geesehunt/src/components/LoginDialog/index.js","/Users/chrisxu/Documents/repos/geesehunt/src/selectors/user.js","/Users/chrisxu/Documents/repos/geesehunt/src/components/AppLayout/AppLayout.js","/Users/chrisxu/Documents/repos/geesehunt/src/routes/root/index.js"],"names":["Link","props","to","children","attrs","href","onClick","e","event","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","button","isLeftClickEvent","defaultPrevented","preventDefault","history","push","handleClick","defaultProps","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","appTitle","listItemLink","color","palette","text","primary","textDecoration","avatar","height","DialogTitle","id","Button","variant","size","fontSize","DialogActions","LoginDialog","open","onClose","Dialog","aria-labelledby","DialogContent","style","selectUser","createSelector","state","user","subState","Divider","CssBaseline","connect","classes","useStyles","useTheme","React","useState","setOpen","showLogin","setShowLogin","isLoggedIn","Boolean","sideBarMenuItems","icon","link","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Avatar","alt","displayName","src","avatarUrl","sideBar","Drawer","paper","direction","List","map","ListItem","ListItemIcon","ListItemText","title","chunks","component","action"],"mappings":"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","file":"root.ff82e446.chunk.js","sourcesContent":["/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright Â© 2014-present Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport history from '../../history';\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction handleClick(props, event) {\n  if (props.onClick) {\n    props.onClick(event);\n  }\n\n  if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n    return;\n  }\n\n  if (event.defaultPrevented === true) {\n    return;\n  }\n\n  event.preventDefault();\n  history.push(props.to);\n}\n\nexport default function Link(props) {\n  const { to, children, ...attrs } = props;\n\n  return (\n    <a href={to} {...attrs} onClick={e => handleClick(props, e)}>\n      {children}\n    </a>\n  );\n}\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n};\n\nLink.defaultProps = {\n  onClick: null,\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nexport default makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  appTitle: {\n    flexGrow: 1,\n  },\n  listItemLink: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n  },\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n}));\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport PropTypes from 'prop-types';\n\nconst LoginDialog = ({ open, onClose }) => {\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"login-dialog-title\">\n      <DialogTitle id=\"login-dialog-title\">Login with our provider</DialogTitle>\n      <DialogContent>\n        <a\n          href=\"/login/facebook\"\n          style={{ textDecoration: 'none' }}\n          onClick={onClose}\n        >\n          <Button variant=\"contained\" size=\"large\" color=\"primary\">\n            <FacebookIcon fontSize=\"large\" />\n            &nbsp; Continue with Facebook\n          </Button>\n        </a>\n      </DialogContent>\n      <DialogActions />\n    </Dialog>\n  );\n};\n\nLoginDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nLoginDialog.defaultProps = {\n  open: false,\n};\n\nexport default LoginDialog;\n","import { createSelector } from 'reselect';\n\nconst selectDomain = state => state.user;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const selectUser = createSelector(selectDomain, subState => subState);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Drawer,\n  List,\n  Typography,\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CssBaseline,\n  Button,\n  Avatar,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport { connect } from 'react-redux';\nimport Link from '../Link/Link';\nimport useStyles from './styles/AppLayoutStyles';\nimport LoginDialog from '../LoginDialog';\nimport { selectUser } from '../../selectors/user';\n\nfunction AppLayout({ children, user }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [showLogin, setShowLogin] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const isLoggedIn = Boolean(user.id);\n\n  const sideBarMenuItems = [\n    { text: 'Explorer Course', icon: <ExploreIcon />, link: '/courses' },\n    { text: 'My GPA', icon: <SpellcheckIcon />, link: '/' },\n  ];\n\n  const appBar = (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: open,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open,\n          })}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap className={classes.appTitle}>\n          GeeseHunt\n        </Typography>\n        {isLoggedIn ? (\n          <IconButton size=\"small\">\n            <Avatar\n              alt={user.displayName}\n              src={user.avatarUrl}\n              className={classes.avatar}\n            />\n          </IconButton>\n        ) : (\n          <Button color=\"inherit\" onClick={() => setShowLogin(true)}>\n            Login\n          </Button>\n        )}\n        <LoginDialog open={showLogin} onClose={() => setShowLogin(false)} />\n      </Toolbar>\n    </AppBar>\n  );\n\n  const sideBar = (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'rtl' ? (\n            <ChevronRightIcon />\n          ) : (\n            <ChevronLeftIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {sideBarMenuItems.map(({ text, link, icon }) => (\n          <Link key={text} to={link} className={classes.listItemLink}>\n            <ListItem button>\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      {appBar}\n      {sideBar}\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  user: selectUser(state),\n});\n\nexport default connect(mapStateToProps)(AppLayout);\n","import React from 'react';\nimport AppLayout from '../../components/AppLayout/AppLayout';\n\nasync function action() {\n  return {\n    title: 'GeeseHunt',\n    chunks: ['root'],\n    component: <AppLayout>Content</AppLayout>,\n  };\n}\n\nexport default action;\n"],"sourceRoot":""}